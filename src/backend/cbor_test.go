package main

import (
	"encoding/hex"
	"testing"
)

func TestDecodeCbor(t *testing.T) {
	tests := []struct {
		name string
		cbor string
	}{
		{
			name: "basic UTXO",
			cbor: "84a500d901028182582098c8f9429ebf08e16cc77a1cb50c564f7d75c49d036d32c5ada4c4552ca7942201018382581d601cf478b0e8b0c2ba179dc0ddfadcca4fb9e149244dcfc7813fc5bbcb1a00989680825839003a5904074323a4cddfe1103969962a5807c6c37495db9df48d019f9a5a0987ee3ec775d90cb16851a5f3cc9d8b03bd6492329e89368442291b0000000251cce8e3825839003a5904074323a4cddfe1103969962a5807c6c37495db9df48d019f9a5a0987ee3ec775d90cb16851a5f3cc9d8b03bd6492329e89368442291a004c4b40021a00029939031a05ae1d580801a100d90102818258202e44aa608940b750a7369b15f3830c067b3149450937b3020a9a674329c4d79d584025de808e1190cebf8370dbb76b49bf96feec109e180a74eb07cefd13c01261af6c4eb0ab584f94957fcef1ca22b3b57b0c9289b1e2d7533d732a81587a82ee06f5f6",
		},
		{
			name: "basic Tx",
			cbor: "84ab00838258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e008258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e02825820b1bbbbcf999728c6c515a2900bac401b8449fae23d9cfd06caa2f48177fb16b9010183a300581d706398de8bd177d8f84c8f87d2f0d19c16b7a638fc01db3ba257cf721901821a001e8480a1581c1791a1daaaa529d486a6681a9503301c17e1901b67dd3b6c686f51b0a1484e6f64654665656401028201d818583cd87a9fd8799f581c1ba65a0886f021ef293646bf903f733139c72b9341b19b578346612ed8799fd8799f1a000234121b00000197ae907af3ffffffff82581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a0089544082581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a007a2994021a000793f4031a05ae1f27081a05ae1eaf0b5820bccf2d628e3df2f5397eb9dca0490681478070340b07a695298ae90f47f8b4cc0d818258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e020e81581c1ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1082581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a004ab149111a00370c3f12818258207ca10f331a500d5352f48a32aff29eaab445e23d1ed2db59b0631eb6cc3ecdc800a200818258209a843ee906ddaa30ae99f6041db5f66f2af23a34d16fc95f20f8685da7d14ff85840953c2d958f44f567e33dd9209a3c39590fac59ac99d3e174a3763a166d942c1fb52238e9339aa5cd025ad2d41ce96395dcf75a70358514ed34d3b144bf01fe0f05a182000082d87980821a0011ef051a0fd6d27ef5f6",
		},
		{
			name: "basic Block",
			cbor: "85828a1a003737571a05ae1ec9582084b7e88be0b427e19b050b7348cce6a830c38ae1aec624ed50648ac1705e50445820b920f7ed0c64ae9b5dcc562e50b5fec7fc70aaf0ade56d6772d7127e1b06a2b958208e0a4a1c3f34635a7c5745f9a4ba95f0874fab227860e11858fb1aba070173ef82584097b0afb979ef117dd01fd1728068ad9c0aa8ebc4c74f1603c858ad6f3e29c9ea79920b494b57d656a21dac745bc2382f8d9f5eaef60502b0668e9949e2e244d25850a2cf62d97d1cf08ce312a6c430871d639d9220fffd658789c0fa1ef998cf3fa5d98fd235522dda6ddfbcaf3fc0705fae8a71cc83cf754c3ee0b0ee9e96bed01c02f2603087a83aa7341a0fb9ecdf0c0519056058200e952b9b2590cef8f8e54401b8bbe830560fcf7c85f85fb5b4cbe49e0e8ac27f8458200b70698725830af956a077390e61e67ace10b0047482487988191606f716ad24011902ce5840fdd05d9b5840bbd95bcc5a66dec62451fd5bbc17a445d9f09d5ba6a6a409924eccd23a337661b9f78ef5fa416cbb0bd6c13e26c037624e0773a46ee23d1d0500820a035901c0c80e9614bbd5f08b02f05c01c4b88f16173aa05c45fc4c53358cb5f4977c776bc0bdc6da0c7a932d63eef29bccc920a6cba3da70d29ffcd9ab50174d1a18bd0a2cdcb8a8bdb37bb04023b59412308ff17e17b9f6f11e92cda49f603750f787c72f3cf2bea070e70ee829fdf63aafd32e649ac3a5010c562f2bd20a55accbbcb2345431df7807b1e0cf6eda0d2f0800b9e1618c3a0701ba8ee0a34cf0a050ca00e68b235ce44d409fce86ee8b3f6b5f3fea195548d5d9b68004fee0b5b1e6f4694d7133edb28476fd492b85dbb05a7d898db7495e3664252ada46c080d42f6ec63d5c25ddb3c5b5b5ac775f02f7f78f3847008c23abdcfb2b3c5bc01133c801952c992bb07141cf524df425f167fe5c305d40fcea0ef136e9be8cde500652c395271867b37c6571e563a2ab8da95e93b9e82014eb6f4d81e437c8e3296d9f39cff643d4d65f2f4aac91d94e1a28f7a8764ec0959d0d9adbdcfa8f3f6f480d0f8fe70778987c3de073e36e20bfef7d6d646632be884da00f59416b726934f4aa51272705e2310044dcf5a1ca5ea65896d057f248c567f91d41d787ff7b0f31aaf876c44885db4debb488a724d848470b1446252324eb2f5c09dc8e5e48658c6d4982ab00838258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e008258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e02825820b1bbbbcf999728c6c515a2900bac401b8449fae23d9cfd06caa2f48177fb16b9010183a300581d706398de8bd177d8f84c8f87d2f0d19c16b7a638fc01db3ba257cf721901821a001e8480a1581c1791a1daaaa529d486a6681a9503301c17e1901b67dd3b6c686f51b0a1484e6f64654665656401028201d818583cd87a9fd8799f581c1ba65a0886f021ef293646bf903f733139c72b9341b19b578346612ed8799fd8799f1a000234121b00000197ae907af3ffffffff82581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a0089544082581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a007a2994021a000793f4031a05ae1f27081a05ae1eaf0b5820bccf2d628e3df2f5397eb9dca0490681478070340b07a695298ae90f47f8b4cc0d818258205561b1849ca0725f25febcfabe496607ad9acaf856ef584c0d61f3d0f985833e020e81581c1ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1082581d601ba65a0886f021ef293646bf903f733139c72b9341b19b578346612e1a004ab149111a00370c3f12818258207ca10f331a500d5352f48a32aff29eaab445e23d1ed2db59b0631eb6cc3ecdc800ab008382582084d9cc2f268d0509363ba00479d0c45d29c5ce36f2d3a8f70d71ebb58daa5ee40082582084d9cc2f268d0509363ba00479d0c45d29c5ce36f2d3a8f70d71ebb58daa5ee401825820ef10a6ccb4762441de727884dcc9f0940d4186bf16d8ab068d23d6467e34627b010183a300581d70eb0c967cbd3c39bb91a3f6227beb12e77cd8215ec2db09dc0f6552cc01821a001e8480a1581c5c303aa18e52d0e0f74c97b1886d8f6da080ecddc1d5e8dfd8b85ec6a1484e6f64654665656401028201d818583ad87a9fd8799f581c3321f0d7f128361dadc05b17b44d74ec5e4df6bb241750123d4fc1f3d8799fd8799f1903181b00000197ae90cf85ffffffff82581d603321f0d7f128361dadc05b17b44d74ec5e4df6bb241750123d4fc1f31a0089544082581d603321f0d7f128361dadc05b17b44d74ec5e4df6bb241750123d4fc1f3821a00914383a1581c698a6ea0ca99f315034072af31eaac6ec11fe8558d3f48e9775aab9da14574445249501a000f57c7021a0007a564031a05ae1f27081a05ae1eaf0b58203e841a8de159aa7e4b0cc99f6491e70b69dc566c0143c0de4cbda7221257e3800d81825820075900a4a7775ce4e91e1128976ebc65032436d5249c7ba134cf6853bbb91904030e81581c3321f0d7f128361dadc05b17b44d74ec5e4df6bb241750123d4fc1f31082581d603321f0d7f128361dadc05b17b44d74ec5e4df6bb241750123d4fc1f31a0079fc95111a00370c3f12818258201df150a0a448f26ee8a9a86d734a9981c4d872cf1bfddaab6b5ac656c212a6e20082a200818258209a843ee906ddaa30ae99f6041db5f66f2af23a34d16fc95f20f8685da7d14ff85840953c2d958f44f567e33dd9209a3c39590fac59ac99d3e174a3763a166d942c1fb52238e9339aa5cd025ad2d41ce96395dcf75a70358514ed34d3b144bf01fe0f05a182000082d87980821a0011ef051a0fd6d27ea20081825820242616ee42884cdf9b50b6b4962f4c8340165c464ce7a62a3ae2e7dc5a0b86755840ec302b4211776f62821c26b8b5aa844b5183f99a01d972d804b9332f7164130937a467fe5f369634ea3b83aa5ca6aa1bdf32213465e63996223c93111b9dc20f05a182000082d87980821a001275d51a105ae10ea080",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			bs, err := hex.DecodeString(tt.cbor)
			if err != nil {
				t.Fatalf("bad input %v", err)
			}

			d, err := Decode(bs)
			if err != nil {
				t.Fatalf("bad cbor %v", err)
			}

			// make sure the roundtrip is the same
			bs_ := d.Cbor()

			if hex.EncodeToString(bs_) != tt.cbor {
				t.Fatalf("roundtrip failed")
			}
		})
	}
}
